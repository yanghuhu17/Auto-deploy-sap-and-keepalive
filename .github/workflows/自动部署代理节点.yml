name: 手动部署 VMESS+TLS 节点（SG free）

on:
  workflow_dispatch:
    inputs:
      app_name:
        description: '应用名称（可选，留空自动生成）'
        required: false
        default: ''
      memory:
        description: '内存大小'
        required: false
        default: '512M'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 安装 Cloud Foundry CLI
        run: |
          sudo apt-get update -y
          sudo apt-get install -y cf8-cli

      - name: 设置部署环境
        run: |
          echo "CF_API=https://api.cf.ap21.hana.ondemand.com" >> $GITHUB_ENV
          echo "DOCKER_IMAGE=ghcr.io/uncleluogithub/mous:latest" >> $GITHUB_ENV
          echo "MEMORY=${{ github.event.inputs.memory }}" >> $GITHUB_ENV
          RAND=$(head /dev/urandom | tr -dc a-z0-9 | head -c 5)

          if [ -n "${{ github.event.inputs.app_name }}" ]; then
            echo "APP_NAME=${{ github.event.inputs.app_name }}" >> $GITHUB_ENV
          else
            echo "APP_NAME=vmess-sg-${RAND}" >> $GITHUB_ENV
          fi

      - name: 登录 SAP Cloud Foundry
        run: |
          cf login -a ${{ env.CF_API }} \
            -u "${{ secrets.EMAIL }}" \
            -p "${{ secrets.PASSWORD }}" \
            --skip-ssl-validation

          ORG=$(cf orgs | sed -n 2p)
          SPACE=$(cf spaces | sed -n 2p)
          echo "ORG=$ORG" >> $GITHUB_ENV
          echo "SPACE=$SPACE" >> $GITHUB_ENV
          cf target -o "$ORG" -s "$SPACE"

      - name: 部署 VMESS+TLS 节点
        run: |
          echo "🚀 开始部署 VMESS+TLS 节点..."
          if cf push ${{ env.APP_NAME }} \
            --docker-image ${{ env.DOCKER_IMAGE }} \
            -m ${{ env.MEMORY }} \
            --health-check-type port; then
            echo "✅ 部署成功"
          else
            cf delete ${{ env.APP_NAME }} -r -f
            echo "❌ 部署失败，已清理，请稍后重试"
            exit 1
          fi

      - name: 注入环境变量
        run: |
          cf set-env ${{ env.APP_NAME }} NAME "VMESS+TLS"
          cf set-env ${{ env.APP_NAME }} UUID "${{ secrets.UUID }}"
          cf restage ${{ env.APP_NAME }}

      - name: 输出节点信息与 vmess 链接
        run: |
          ROUTE=$(cf app ${{ env.APP_NAME }} | grep "routes:" | awk '{print $2}')
          if [ -z "$ROUTE" ]; then
            ROUTE=$(cf routes | grep ${{ env.APP_NAME }} | awk '{print $2}' | head -n 1)
          fi

          echo ""
          echo "🎉 部署完成！"
          echo "🌍 区域: SG(free)"
          echo "📦 应用名称: ${{ env.APP_NAME }}"
          echo "🔗 节点地址: https://$ROUTE"
          echo "🖼 镜像: ${{ env.DOCKER_IMAGE }}"

          VMESS_JSON=$(cat <<EOF
{
  "v": "2",
  "ps": "SG-free",
  "add": "$ROUTE",
  "port": "443",
  "id": "${{ secrets.UUID }}",
  "aid": "0",
  "net": "ws",
  "type": "none",
  "host": "$ROUTE",
  "path": "/vmess",
  "tls": "tls"
}
EOF
)
          VMESS_BASE64=$(echo "$VMESS_JSON" | base64 -w 0)
          echo ""
          echo "🔑 复制以下链接导入到 Clash / v2rayN："
          echo "vmess://$VMESS_BASE64"
